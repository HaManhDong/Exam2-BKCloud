[{"id":"dd3c442e.36ee38","type":"tab","label":"dashboard","disabled":false,"info":""},{"id":"a4a988b9.2e59b8","type":"tab","label":"Flow 3","disabled":true,"info":""},{"id":"4c2e94da.3be41c","type":"tab","label":"handle v2","disabled":false,"info":""},{"id":"4b7b79b4.35d5c8","type":"tab","label":"Flow 1","disabled":false},{"id":"69663248.8df44c","type":"influxdb","z":"dd3c442e.36ee38","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"icse_iot","name":"","usetls":false,"tls":""},{"id":"fa1d3b67.ee8ed8","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"dba27faf.94f2","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"3df7710a.0e4cce","type":"MySQLdatabase","z":"","host":"127.0.0.1","port":"3306","db":"icse_iot","tz":""},{"id":"502f9ded.5e5504","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"5a6d4610.eb8468","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"35be4bc8.b9b054","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"cea6a36a.285fc","type":"influxdb-server","z":"","host":"influxdb","port":"8086","database":"iot"},{"id":"361c11b9.7d9f5e","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"f3ce6127.d19cd","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"14730d30.1dc053","type":"MySQLdatabase","z":"","host":"mysql","port":"3306","db":"iot","tz":""},{"id":"3906f8ce.3daa18","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"d8906401.ab26d8","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"f55932aa.7fc18","type":"http in","z":"dd3c442e.36ee38","name":"","url":"device/api/info","method":"get","upload":false,"swaggerDoc":"","x":112,"y":106,"wires":[["4b2f264f.bc1c38"]]},{"id":"66826164.a3a52","type":"function","z":"dd3c442e.36ee38","name":"get sensor info","func":"msg.query = \"select * from sensor;\";\nreturn msg;","outputs":1,"noerr":0,"x":311,"y":265,"wires":[["4016591a.4f7c18"]]},{"id":"cb7bfde3.7f31","type":"http in","z":"dd3c442e.36ee38","name":"","url":"sensor/api/info","method":"get","upload":false,"swaggerDoc":"","x":103,"y":223,"wires":[["66826164.a3a52"]]},{"id":"60e6f9ff.0d3378","type":"function","z":"dd3c442e.36ee38","name":"format response","func":"let payload = [];\nfor(let i = 0;i<msg.payload.length;i++){\n    let sensor = msg.payload[i];\n    payload.push({\n        macAddr: sensor.macAddr, \n        sensorID: sensor.name, \n\t\tsensorStatus: sensor.status, \n\t\tcreatedAt: sensor.created_at\n    })\n}\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"x":716,"y":249,"wires":[["18678cfa.8dc873"]]},{"id":"18678cfa.8dc873","type":"http response","z":"dd3c442e.36ee38","name":"","statusCode":"","headers":{},"x":1104,"y":313,"wires":[]},{"id":"c928a9d8.89bed8","type":"http in","z":"dd3c442e.36ee38","name":"","url":"device/api/logs","method":"get","upload":false,"swaggerDoc":"","x":95,"y":402,"wires":[["3fb59396.65d5ac"]]},{"id":"3fb59396.65d5ac","type":"function","z":"dd3c442e.36ee38","name":"create query device logs ","func":"let macAddr = msg.payload.macAddr;\nmsg.payload.query = \"select time,deviceStatus from devices_and_sensors where macAddr='\" + macAddr + \"' and isDevice=True;\";\nreturn msg;","outputs":1,"noerr":0,"x":451,"y":409,"wires":[["82e3e3a6.71ac3"]]},{"id":"9080cbc7.740ff8","type":"http in","z":"dd3c442e.36ee38","name":"","url":"sensor/api/logs","method":"get","upload":false,"swaggerDoc":"","x":95,"y":502,"wires":[["8fd3e36e.cee62"]]},{"id":"8fd3e36e.cee62","type":"function","z":"dd3c442e.36ee38","name":"create query sensor logs ","func":"let sensorID = msg.payload.sensorID;\nmsg.payload.query = \"select time,sensorStatus from devices_and_sensors where sensorID='\" + sensorID + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":474,"y":510,"wires":[["f233eabf.0c0d38"]]},{"id":"86a78637.6f5928","type":"http in","z":"dd3c442e.36ee38","name":"","url":"/realtime-chart/api/device/initData","method":"get","upload":false,"swaggerDoc":"","x":155,"y":604,"wires":[["fc569046.c9d25"]]},{"id":"da613.feb4d9ed","type":"function","z":"dd3c442e.36ee38","name":"add query init data","func":"msg.sensors = msg.payload;\n\nlet macAddr = msg.macAddr;\nlet endTime = Date.now();\nlet startTime = endTime - 60*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.payload.query = \"select * from data where macAddr='\" + \n    macAddr + \"' and \" + \n    \"time >= \"+ startTime + \" and \" + \n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":564,"y":660,"wires":[["ec86c191.47a3f"]]},{"id":"87a6c79e.e407e8","type":"function","z":"dd3c442e.36ee38","name":"format init data response","func":"var units_range = {\n    c: {min: 1, max: 100},\n    lux: {min: 1, max: 100},\n    humi: {min: 1, max: 65535}\n};\n\nvar groupLineChart = [\n    {unit: \"\", lines: []},\n    {unit: \"Lux\", lines: []}\n]\n\nfor(let i = 0;i<msg.sensors.length;i++){\n    msg.sensors[i].timeSeriesData = [];\n    msg.sensors[i].sensorID = msg.sensors[i].name;\n}\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j = 0; j < msg.sensors.length; j++) {\n        if (msg.payload[i].name === msg.sensors[j].name) {\n            msg.sensors[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            break;\n        }\n    }\n    // if (is_new_sensor) {\n    //     let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n    //         msg.payload[i].unit);\n    //     new_sensor.timeSeriesData.push({\n    //         time: msg.payload[i].time,\n    //         value: msg.payload[i].value\n    //     })\n    //     initSensorsData.push(new_sensor);\n    // }\n}\n\nfor (let i = 0; i < msg.sensors.length; i++) {\n    if (msg.sensors[i].unit.toLowerCase() === 'c' ||\n        msg.sensors[i].unit.toLowerCase() === '%') {\n        groupLineChart[0].lines.push(msg.sensors[i]);\n        groupLineChart[0].unit += \" / \" + msg.sensors[i].unit;\n    }\n    if (msg.sensors[i].unit.toLowerCase() === 'lux') {\n        groupLineChart[1].lines.push(msg.sensors[i]);\n    }\n}\n\ngroupLineChart[0].unit = groupLineChart[0].unit.slice(3, groupLineChart[0].unit.length);\n\nmsg.payload = groupLineChart;\nreturn msg;","outputs":1,"noerr":0,"x":865,"y":650,"wires":[["18678cfa.8dc873"]]},{"id":"701844c6.06eefc","type":"http in","z":"dd3c442e.36ee38","name":"","url":"dashboard","method":"get","upload":false,"swaggerDoc":"","x":181,"y":34,"wires":[["4a821498.7bd79c"]]},{"id":"da02dfe5.3c06d","type":"http in","z":"dd3c442e.36ee38","name":"","url":"/realtime-chart/api/sensor/latestData","method":"get","upload":false,"swaggerDoc":"","x":165,"y":769,"wires":[["2bc79f87.7b9a3"]]},{"id":"2bc79f87.7b9a3","type":"function","z":"dd3c442e.36ee38","name":"add query latest data","func":"msg.macAddr = msg.payload.macAddr;\n\nmsg.arrSensorID = msg.payload.sensorIDs.split(',');\nlet sensor_query = \"\";\nfor(let i = 0;i<msg.arrSensorID.length;i++){\n    if(msg.arrSensorID[i]){\n        sensor_query += \"or \\\"name\\\" = '\" + msg.arrSensorID[i] + \"' \";\n    }\n}\n\nsensor_query = sensor_query.slice(2, sensor_query.length);\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.payload.query = \"select * from data where \" +\n    sensor_query + \" and \" +\n    \"\\\"macAddr\\\" = '\" + msg.macAddr + \"' and \" +\n    \"time >= \"+ startTime + \" and \" +\n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":335,"y":845,"wires":[["9fe60774.8a59a8"]]},{"id":"aaaacade.bc8db8","type":"function","z":"dd3c442e.36ee38","name":"format latest data response","func":"var initSensorsData = [];\nvar Sensor = function (macAddr, sensorID) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    // this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<initSensorsData.length;j++) {\n        if (msg.payload[i].name === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].name);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\nmsg.payload = initSensorsData;\nreturn msg;","outputs":1,"noerr":0,"x":744,"y":805,"wires":[["18678cfa.8dc873"]]},{"id":"4a821498.7bd79c","type":"dashboard","z":"dd3c442e.36ee38","name":"","x":416,"y":40,"wires":[["18678cfa.8dc873"]]},{"id":"4b2f264f.bc1c38","type":"function","z":"dd3c442e.36ee38","name":"get device info","func":"msg.query = \"select * from device;\";\nreturn msg;","outputs":1,"noerr":0,"x":365,"y":130,"wires":[["b85335c5.56f7d8"]]},{"id":"662ccad3.ce6944","type":"debug","z":"dd3c442e.36ee38","name":"","active":true,"console":"false","complete":"false","x":649,"y":214,"wires":[]},{"id":"fc569046.c9d25","type":"function","z":"dd3c442e.36ee38","name":"get device's sensor ","func":"msg.macAddr = msg.payload.macAddr;\nmsg.query = \"select * from sensor where macAddr='\" + msg.macAddr + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":318,"y":670,"wires":[["abcc9caf.58626"]]},{"id":"b85335c5.56f7d8","type":"mysql-query","z":"dd3c442e.36ee38","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":561,"y":132,"wires":[["18678cfa.8dc873"]]},{"id":"4016591a.4f7c18","type":"mysql-query","z":"dd3c442e.36ee38","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":499,"y":307,"wires":[["662ccad3.ce6944","18678cfa.8dc873"]]},{"id":"abcc9caf.58626","type":"mysql-query","z":"dd3c442e.36ee38","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":453,"y":596,"wires":[["da613.feb4d9ed"]]},{"id":"aad2c948.d31d58","type":"debug","z":"a4a988b9.2e59b8","name":"","active":true,"console":"false","complete":"true","x":598,"y":87,"wires":[]},{"id":"c4ca872a.09b548","type":"inject","z":"a4a988b9.2e59b8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":90,"y":250,"wires":[["326a0e37.1ea482"]]},{"id":"326a0e37.1ea482","type":"function","z":"a4a988b9.2e59b8","name":"test query","func":"msg.query = \"select name from sensor where macAddr = 'ab:bc:1e';\";\nreturn msg;","outputs":1,"noerr":0,"x":256,"y":251,"wires":[["fbecb9f4.48e038"]]},{"id":"a675fccf.c8d6","type":"function","z":"a4a988b9.2e59b8","name":"query device","func":"msg.payload = JSON.parse(msg.payload);\nmsg.newDevice = msg.payload;\nmsg.query = \"select * from sensor where macAddr = '\" + msg.payload.macAddr + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":268,"y":365,"wires":[["2cd9c93f.562ba6"]]},{"id":"cd091aae.77a268","type":"inject","z":"a4a988b9.2e59b8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":84,"y":168,"wires":[["314af3eb.6e305c"]]},{"id":"6fe7a66a.ca1c68","type":"inject","z":"a4a988b9.2e59b8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":78,"y":108,"wires":[["f8ce4da2.77063"]]},{"id":"33c3b919.2507c6","type":"mqtt in","z":"a4a988b9.2e59b8","name":"","topic":"bkcloud/newDevice","qos":"2","broker":"fa1d3b67.ee8ed8","x":95,"y":423,"wires":[["a675fccf.c8d6"]]},{"id":"65ec59d8.126dc8","type":"function","z":"a4a988b9.2e59b8","name":"check device and sensors exist","func":"// msg.newDevice: contain device register\n\nlet newSensors = [];\nmsg.query = \"\";\nif(msg.payload.length){\n    for(let i = 0;i<msg.newDevice.sensors.length;i++){\n        let sensor = msg.newDevice.sensors[i];\n        let is_new_sensor = true;\n        for(let j = 0;j<msg.payload.length;j++){\n            let oldSensor = msg.payload[j];\n            if(sensor.name === oldSensor.name){\n                is_new_sensor = false;\n                break;\n            }\n        }\n        if(is_new_sensor){\n            newSensors.push(sensor);\n        }\n    }\n} else{\n    // device didn't register\n    newSensors = msg.newDevice.sensors;\n    msg.query += \"insert into device (macAddr, type, status, created_at) values('\" +\n            msg.newDevice.macAddr + \"','\" + msg.newDevice.type + \"', 'ONLINE', now());\";\n}\n\nif(newSensors.length) {\n    msg.query += \"insert into sensor (name,macAddr, unit, status, created_at) values\";\n    for(let i = 0;i<newSensors.length;i++){\n        let newSensor = newSensors[i];\n        msg.query += \"('\" + newSensor.name + \"','\"+ msg.newDevice.macAddr + \"','\" + newSensor.unit + \"','ONLINE', now()),\";\n    }\n    msg.query = msg.query.replace(/.$/,\";\");\n    msg.newSensors = newSensors;\n    return [msg, null];\n}\nreturn [null, msg];\n","outputs":"2","noerr":0,"x":541,"y":434,"wires":[["ef3c2a1e.a90a88"],["ad3fac96.723b9"]]},{"id":"df7ef325.5209c","type":"mqtt out","z":"a4a988b9.2e59b8","name":"response to device","topic":"","qos":"","retain":"","broker":"fa1d3b67.ee8ed8","x":1128,"y":403,"wires":[]},{"id":"ad3fac96.723b9","type":"function","z":"a4a988b9.2e59b8","name":"message to ESP","func":"let message_response = {\n    topic: \"icse/\" + msg.newDevice.macAddr + \"/action\",\n    payload: {type: \"register\",status: \"OK\"}\n}\nreturn message_response;","outputs":1,"noerr":0,"x":901,"y":427,"wires":[["df7ef325.5209c"]]},{"id":"67b8ab4c.826fa4","type":"function","z":"a4a988b9.2e59b8","name":"save device logs","func":"// msg.newSensors: new sensors\n// msg.measurement = msg.newDevice.macAddr + \"_logs\";\nmsg.payload = [];\n// save device status\nmsg.payload.push([\n    {status: \"ONLINE\"},\n    {\n        name: msg.newDevice.macAddr,\n        macAddr: msg.newDevice.macAddr\n    }\n])\n\nfor(let i = 0;i<msg.newSensors.length;i++){\n    msg.payload.push([\n        {status: \"ONLINE\"},\n        {\n            name: msg.newSensors[i].name,\n            macAddr: msg.newDevice.macAddr\n        }\n    ])\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":896,"y":324,"wires":[["41f5b379.b41ccc"]]},{"id":"a3e47363.47092","type":"mqtt in","z":"a4a988b9.2e59b8","name":"","topic":"bkcloud/data","qos":"2","broker":"fa1d3b67.ee8ed8","x":81,"y":533,"wires":[[]]},{"id":"45046dc4.179b94","type":"inject","z":"a4a988b9.2e59b8","name":"interval time check device status","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":618,"wires":[["9687fe65.55005"]]},{"id":"356b56fb.60d42a","type":"function","z":"a4a988b9.2e59b8","name":"check device status","func":"\n\nif(msg.msgType === \"deviceCome\") {\n    // save the devices macAddr when receive data from it\n    let devicesMacAddrLive = context.get('devicesMacAddrLive') || [];\n    let deviceCome = msg.payload;\n    let isExist = false;\n    for (let i = 0; i < devicesMacAddrLive.length; i++) {\n        if (deviceCome.macAddr === devicesMacAddrLive[i]) {\n            isExist = true;\n            break;\n        }\n    }\n    if (!isExist) {\n        devicesMacAddrLive.push(deviceCome.macAddr);\n    }\n// store the devicesMacAddrLive back\n    context.set('devicesMacAddrLive', devicesMacAddrLive);\n    return null;\n} else {\n//    check device status: msg.msgType = checkDevicesStatus\n    let devicesMacAddrLive = context.get('devicesMacAddrLive') || [];\n    let currentDevices = msg.payload;\n    let onlineDevicesMacAddr = [];\n    let offlineDevicesMacAddr = [];\n    for(let i = 0;i<currentDevices.length;i++){\n        let isOnline = false;\n        for(let j = 0;j<devicesMacAddrLive.length;j++){\n            if(currentDevices[i].macAddr === devicesMacAddrLive[j]){\n                isOnline = true;\n                break;\n            }\n        }\n        if(isOnline){\n            onlineDevicesMacAddr.push(currentDevices[i].macAddr);\n        } else {\n            offlineDevicesMacAddr.push(currentDevices[i].macAddr);\n        }\n    }\n    devicesMacAddrLive = [];\n    context.set('devicesMacAddrLive', devicesMacAddrLive);\n    msg.onlineDevicesMacAddr = onlineDevicesMacAddr;\n    msg.offlineDevicesMacAddr = offlineDevicesMacAddr;\n    return msg;\n}","outputs":"1","noerr":0,"x":579,"y":506,"wires":[["faa28824.f1acf8"]]},{"id":"faa28824.f1acf8","type":"debug","z":"a4a988b9.2e59b8","name":"","active":true,"console":"false","complete":"true","x":757,"y":543,"wires":[]},{"id":"9687fe65.55005","type":"function","z":"a4a988b9.2e59b8","name":"add query devices status","func":"msg.query = \"select macAddr,status from device\";\nmsg.msgType = \"checkDevicesStatus\";\nreturn msg;","outputs":1,"noerr":0,"x":308,"y":712,"wires":[["8f03aa81.4486e8"]]},{"id":"cffa9f88.deddd","type":"function","z":"a4a988b9.2e59b8","name":"format data","func":"msg.payload = JSON.parse(msg.payload);\nmsg.msgType = \"deviceCome\";\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":529,"wires":[["356b56fb.60d42a"]]},{"id":"38fe903d.075cc","type":"mqtt in","z":"a4a988b9.2e59b8","name":"","topic":"bkcloud/data","qos":"2","broker":"fa1d3b67.ee8ed8","x":115,"y":826,"wires":[["a490be94.7d324"]]},{"id":"a490be94.7d324","type":"function","z":"a4a988b9.2e59b8","name":"save data","func":"// msg.newSensors: new sensors\nmsg.payload = JSON.parse(msg.payload);\nlet payload = [];\n// save device data\n\nfor(let i = 0;i<msg.payload.sensorsData.length;i++){\n    let sensor = msg.payload.sensorsData[i];\n    if(typeof(sensor.value) !== \"boolean\"){\n        payload.push([\n            {value: sensor.value, unit: sensor.unit},\n            {\n                name: sensor.name,\n                macAddr:msg.payload.macAddr\n            }\n        ])\n    }\n}\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"x":331,"y":832,"wires":[["78fa4c67.838c44"]]},{"id":"78fa4c67.838c44","type":"influxdb out","z":"a4a988b9.2e59b8","influxdb":"","name":"","measurement":"data","precision":"","retentionPolicy":"","x":612,"y":829,"wires":[]},{"id":"8f03aa81.4486e8","type":"mysql-query","z":"a4a988b9.2e59b8","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":469,"y":640,"wires":[["356b56fb.60d42a"]]},{"id":"2cd9c93f.562ba6","type":"mysql-query","z":"a4a988b9.2e59b8","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":431,"y":371,"wires":[["65ec59d8.126dc8"]]},{"id":"ef3c2a1e.a90a88","type":"mysql-query","z":"a4a988b9.2e59b8","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":712,"y":377,"wires":[["67b8ab4c.826fa4","ad3fac96.723b9"]]},{"id":"fbecb9f4.48e038","type":"mysql-query","z":"a4a988b9.2e59b8","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":508,"y":175,"wires":[["aad2c948.d31d58"]]},{"id":"f8ce4da2.77063","type":"function","z":"a4a988b9.2e59b8","name":"create table device","func":"msg.query = \"CREATE TABLE device (\" + \n// \"id INT AUTO_INCREMENT NOT NULL,\" +\n\"macAddr VARCHAR(30) NOT NULL,\" +\n\"type VARCHAR(10) NOT NULL,\" +\n\"status VARCHAR(50) NOT NULL,\" +\n\"created_at DATETIME NOT NULL,\" +\n\"PRIMARY KEY (macAddr))\";\nreturn msg;","outputs":1,"noerr":0,"x":293,"y":78,"wires":[["fbecb9f4.48e038"]]},{"id":"314af3eb.6e305c","type":"function","z":"a4a988b9.2e59b8","name":"create table sensor","func":"msg.query = \"CREATE TABLE sensor (\" + \n// \"id INT NOT NULL,\" +\n\"name VARCHAR(30) NOT NULL,\" +\n\"macAddr VARCHAR(30) NOT NULL,\" +\n\"unit VARCHAR(10),\" +\n\"status VARCHAR(50) NOT NULL,\" +\n\"created_at DATETIME NOT NULL,\" +\n\"PRIMARY KEY (name, macAddr),\" +\n\"CONSTRAINT fk_device FOREIGN KEY (macAddr) REFERENCES device(macAddr) ON DELETE CASCADE)\";\nreturn msg;","outputs":1,"noerr":0,"x":299,"y":162,"wires":[["fbecb9f4.48e038"]]},{"id":"c96b0a26.5fc248","type":"http response","z":"dd3c442e.36ee38","name":"","statusCode":"","headers":{},"x":983,"y":1063,"wires":[]},{"id":"807d2eb2.6234e","type":"http in","z":"dd3c442e.36ee38","name":"","url":"sensor/api/count","method":"get","upload":false,"swaggerDoc":"","x":135,"y":938,"wires":[["b700e9fe.e23598"]]},{"id":"b700e9fe.e23598","type":"mysql-query","z":"dd3c442e.36ee38","mydb":"14730d30.1dc053","name":"","queryString":"select count(*) as count from sensor;","outputTo":"payload","x":391,"y":937,"wires":[["6fcb15c3.0f95bc"]]},{"id":"6fcb15c3.0f95bc","type":"function","z":"dd3c442e.36ee38","name":"format data response","func":"msg.payload = msg.payload[0].count;\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":936,"wires":[["c96b0a26.5fc248"]]},{"id":"a2f88177.4761e","type":"http in","z":"dd3c442e.36ee38","name":"","url":"/latestUnitData","method":"get","upload":false,"swaggerDoc":"","x":133,"y":1032,"wires":[["23f29b44.c36aa4"]]},{"id":"23f29b44.c36aa4","type":"function","z":"dd3c442e.36ee38","name":"generate query","func":"let unit = msg.payload.unit;\nmsg.payload.query = \"select last(value) as latestValue from data where \\\"unit\\\"='\" + unit + \"'\";\nreturn msg;","outputs":1,"noerr":0,"x":396,"y":1030,"wires":[["3dd7e957.2dc506"]]},{"id":"3dd7e957.2dc506","type":"influxdb-query","z":"dd3c442e.36ee38","name":"query latest data unit","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":635,"y":1027,"wires":[["c96b0a26.5fc248"]]},{"id":"e7119d9e.35342","type":"influxdb-query","z":"dd3c442e.36ee38","name":"query avareage temperature","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":541,"y":1173,"wires":[["2c5cb481.eed20c"]]},{"id":"6333f80a.dc8bd8","type":"function","z":"dd3c442e.36ee38","name":"generate query for 7 day left","func":"let query = \"\";\n// select mean(value) from data where \"unit\"='C' and time > now() - 5m and time < now() - 2m;\nlet range = 5; // minute\nlet column = 7; \nfor(let i = column;i>0;i--){\n    query += \"select mean(value) as value from data where \\\"unit\\\"='C' \" + \n\t\t\t \"and time > now() - \" + range * i + \"m and time < now() - \" + range * (i - 1) + \"m;\"\n}\nmsg.payload = {};\nmsg.payload.query = query;\n\nreturn msg;","outputs":1,"noerr":0,"x":332,"y":1121,"wires":[["e7119d9e.35342"]]},{"id":"2c5cb481.eed20c","type":"function","z":"dd3c442e.36ee38","name":"format data response","func":"let result = [];\nfor(let i = 0;i<msg.payload.length;i++){\n    let data = msg.payload[i][0];\n    result.push(data);\n}\nmsg.payload = result;\nreturn msg;","outputs":1,"noerr":0,"x":713,"y":1118,"wires":[["c96b0a26.5fc248"]]},{"id":"26668184.84e12e","type":"http in","z":"dd3c442e.36ee38","name":"","url":"temperatureAvarage","method":"get","upload":false,"swaggerDoc":"","x":128,"y":1176,"wires":[["6333f80a.dc8bd8"]]},{"id":"ec86c191.47a3f","type":"influxdb-query","z":"dd3c442e.36ee38","name":"","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":696,"y":591,"wires":[["87a6c79e.e407e8"]]},{"id":"f233eabf.0c0d38","type":"influxdb-query","z":"dd3c442e.36ee38","name":"","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":773,"y":516,"wires":[["18678cfa.8dc873"]]},{"id":"82e3e3a6.71ac3","type":"influxdb-query","z":"dd3c442e.36ee38","name":"","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":764,"y":415,"wires":[["18678cfa.8dc873"]]},{"id":"9fe60774.8a59a8","type":"influxdb-query","z":"dd3c442e.36ee38","name":"","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":514,"y":781,"wires":[["aaaacade.bc8db8"]]},{"id":"9e930dea.8c156","type":"http in","z":"dd3c442e.36ee38","name":"","url":"actionToThings","method":"post","upload":false,"swaggerDoc":"","x":145,"y":1276,"wires":[["eba2eff2.6e763"]]},{"id":"84074368.afca8","type":"http response","z":"dd3c442e.36ee38","name":"","statusCode":"","headers":{},"x":594,"y":1291,"wires":[]},{"id":"eba2eff2.6e763","type":"function","z":"dd3c442e.36ee38","name":"convert message","func":"msg.topic = msg.payload.topic;\nmsg.payload = msg.payload.message;\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":1275,"wires":[["84074368.afca8","ed849213.afc5b"]]},{"id":"ed849213.afc5b","type":"mqtt out","z":"dd3c442e.36ee38","name":"","topic":"","qos":"","retain":"","broker":"fa1d3b67.ee8ed8","x":592,"y":1367,"wires":[]},{"id":"963b5966.a9b5c8","type":"mqtt in","z":"4c2e94da.3be41c","name":"","topic":"bkcloud/newDevice","qos":"2","broker":"f3ce6127.d19cd","x":113,"y":282.95001220703125,"wires":[["8a1bcc24.ac34f"]]},{"id":"5c5773bf.0c34bc","type":"inject","z":"4c2e94da.3be41c","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":150,"y":40,"wires":[["56fcfc62.b4b9a4"]]},{"id":"56fcfc62.b4b9a4","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"check table exist","queryString":"SHOW TABLES LIKE 'device';\nSHOW TABLES LIKE 'sensor';\n","outputTo":"queryResult","x":368.8833312988281,"y":53.883331298828125,"wires":[["dc0ee9c3.76a858"]]},{"id":"dc0ee9c3.76a858","type":"function","z":"4c2e94da.3be41c","name":"send init tbl command","func":"var tbl_exist = 0;\nfor (let i=0;i<2;i++){\n    if(msg.queryResult[i].length>=1){\n        tbl_exist+=1;\n    }\n}\nif(tbl_exist<2){\n    return msg;    \n}\n","outputs":1,"noerr":0,"x":598.8833312988281,"y":53.883331298828125,"wires":[["c8826192.0954b"]]},{"id":"c8826192.0954b","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"init tables if not exist","queryString":"CREATE TABLE device (\nmacAddr \tVARCHAR(255) \tNOT NULL,\ntype\t\tVARCHAR(255) \tNOT NULL,\nstatus \t\tVARCHAR(255) \tNOT NULL,\ncreated_at \tDATETIME \tNOT NULL,\nlast_update DATETIME    NOT NULL,\nPRIMARY KEY (macAddr)\n);\n\n\nCREATE TABLE sensor (\nname \t\tVARCHAR(255)\t\tNOT NULL,\nmacAddr \tVARCHAR(255) \tNOT NULL,\nunit \t\tVARCHAR(255),\nstatus \t\tVARCHAR(255) \tNOT NULL,\ncreated_at \tDATETIME\tNOT NULL,\nlast_update DATETIME    NOT NULL,\nPRIMARY KEY (name, macAddr),\nCONSTRAINT fk_device FOREIGN KEY (macAddr) REFERENCES device(macAddr) ON DELETE CASCADE\n);\n","outputTo":"queryResult","x":838.8833312988281,"y":53.883331298828125,"wires":[["5d730f1f.a3282"]]},{"id":"5d730f1f.a3282","type":"debug","z":"4c2e94da.3be41c","name":"","active":true,"console":"false","complete":"true","x":1030,"y":60,"wires":[]},{"id":"8a1bcc24.ac34f","type":"function","z":"4c2e94da.3be41c","name":"parse payload msg","func":"msg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":179,"y":162,"wires":[["39627f31.281a4"]]},{"id":"8cdaf5c7.55b748","type":"function","z":"4c2e94da.3be41c","name":"add device if not exist","func":"var moment = global.get('moment');\nif (msg.deviceQueryResult.length === 0) {\n    // prepare add board query\n    var addBoardQuery = 'INSERT INTO device VALUES(?,?,?,?,?)';\n    var bindQuery = [\n        msg.payload.macAddr, \n        msg.payload.type,\n        'ONLINE',\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n    ];\n    var addNewBoardMsg = {\n        payload:msg.payload,\n        query:addBoardQuery,\n        bindQuery:bindQuery\n    };\n    return [addNewBoardMsg, null];\n    // add board device    \n} else {\n    // do nothing    \n    return [null, msg];\n}","outputs":"2","noerr":0,"x":600,"y":280,"wires":[["b95335e5.869428"],["bc7dec0.03e7a18"]]},{"id":"a470a34c.4a2d6","type":"mqtt out","z":"4c2e94da.3be41c","name":"","topic":"","qos":"","retain":"","broker":"f3ce6127.d19cd","x":1680.7500610351562,"y":294.75,"wires":[]},{"id":"39627f31.281a4","type":"function","z":"4c2e94da.3be41c","name":"check device exist","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":350,"y":280,"wires":[["93614512.b3faa8"]]},{"id":"b95335e5.869428","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"add board","queryString":"","outputTo":"queryResult","x":698.75,"y":158.75,"wires":[["bc7dec0.03e7a18"]]},{"id":"41e3fb85.f611e4","type":"function","z":"4c2e94da.3be41c","name":"add sensors if not exists","func":"var moment = global.get('moment');\nfunction checkSensorExist(checkSensor, currentSensors) {\n    var isExist = false;\n    for (var i = 0; i < currentSensors.length; i++) {\n        if (checkSensor.name == currentSensors[i].name) {\n            isExist = true;\n            break;\n        }\n    }\n    return isExist;\n}\n\nfunction createQueryaddNewSensors(newSensors, macAddr) {\n    var addSensorsQuery = '';\n    var bindQuery = [];\n    for (var i = 0; i < newSensors.length; i++) {\n        var newSensor = newSensors[i];\n        addSensorsQuery += 'INSERT INTO sensor VALUES (?, ?, ?,?,?,?); ';\n        bindQuery.push(\n            newSensor.name,\n            macAddr,\n            newSensor.unit, \n            'ONLINE',\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n            );\n    }\n    return {\n        query: addSensorsQuery,\n        bindQuery: bindQuery\n    };\n}\n\nvar currentSensors = msg.sensorsQueryResult;\nvar deviceSensors = msg.payload.sensors;\nvar macAddr = msg.payload.macAddr;\nvar newSensors = [];\nfor (var i = 0; i < deviceSensors.length; i++) {\n    checkDeviceSensor = deviceSensors[i];\n    if (checkSensorExist(checkDeviceSensor, currentSensors) === false) {\n        newSensors.push(checkDeviceSensor);\n    }\n}\n\nif (newSensors.length > 0) {\n    var addNewSensorsQuery = createQueryaddNewSensors(newSensors, macAddr);\n    var newMsg = {\n        query:addNewSensorsQuery.query,\n        bindQuery:addNewSensorsQuery.bindQuery,\n        payload: msg.payload\n    };\n    return [newMsg, null];\n} else {\n    return [null, msg];\n}","outputs":"2","noerr":0,"x":1144.75,"y":285.75,"wires":[["4165dd8d.1b4f94"],["2a7f7a36.f64326"]]},{"id":"4165dd8d.1b4f94","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"add sensor","queryString":"","outputTo":"addSensorResult","x":1347.75,"y":144.75,"wires":[["2a7f7a36.f64326"]]},{"id":"830464fc.1fa6f8","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"get sensors Info","queryString":"","outputTo":"sensorsQueryResult","x":954.75,"y":156.75,"wires":[["41e3fb85.f611e4"]]},{"id":"2a7f7a36.f64326","type":"function","z":"4c2e94da.3be41c","name":"send authenticated message","func":"var macAddr = msg.payload.macAddr;\n\nvar authenticatedMsg ={\n    type:'register',\n    status:'OK'\n}\nvar sendAuthenticatedMsg ={\n    topic:'bkcloud/'+macAddr+'/action',\n    payload:authenticatedMsg\n}\nreturn sendAuthenticatedMsg;","outputs":1,"noerr":0,"x":1464.7500610351562,"y":300.75,"wires":[["a470a34c.4a2d6"]]},{"id":"bc7dec0.03e7a18","type":"function","z":"4c2e94da.3be41c","name":"get current device sensors","func":"// authenticate msg format\nlet query ='select * from sensor where macAddr = ?';\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":856.75,"y":284.75,"wires":[["830464fc.1fa6f8"]]},{"id":"46c82937.f603e8","type":"mqtt in","z":"4c2e94da.3be41c","name":"","topic":"bkcloud/data","qos":"2","broker":"f3ce6127.d19cd","x":75,"y":440,"wires":[["de8a8281.5d99a"]]},{"id":"11238746.227b29","type":"influxdb-write-data","z":"4c2e94da.3be41c","name":"add time serie data","influxdbServer":"cea6a36a.285fc","dataInput":"serieDataList","measurement":"data","outputTo":"writeDataResult","x":1310,"y":480,"wires":[[]]},{"id":"8a21887b.c87f98","type":"function","z":"4c2e94da.3be41c","name":"valid serie data and write to influxdb","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet macAddr = msg.payload.macAddr;\nlet sensorData = msg.payload.sensorsData;\nlet sensorsInfo = msg.deviceAndSensorsInfo[1];\n\nfunction getSensorInfo(name, macAddr) {\n    for (var i = 0; i < sensorsInfo.length; i++) {\n        if (sensorsInfo[i].name == name && sensorsInfo[i].macAddr == macAddr) {\n            return sensorsInfo[i];\n        }\n    }\n}\n\nlet serieDataList = [];\nmsg.addedSensors = [];\nfor (var i = 0; i < sensorData.length; i++) {\n    let checkSensorData = sensorData[i];\n    var sensorInfo = getSensorInfo(checkSensorData.name, macAddr);\n    // checkSensorData.unit = sensorInfo.unit;\n    if ((sensorInfo.unit == 'Lux' &&checkSensorData.value>=1 &&checkSensorData.value<=65535) ||\n        sensorInfo.unit == 'C' &&checkSensorData.value>=0 &&checkSensorData.value<=100) {\n        serieDataList.push({\n            tags: {\n                'macAddr': macAddr,\n                'name': checkSensorData.name,\n            },\n            fields: {\n                'unit':sensorInfo.unit,\n                'value': checkSensorData.value\n            },\n            time_stamp: msg.receivedTime.getTime() * Math.pow(10, 6)\n        });\n    }\n}\nlet sendMsg = msg;\nif (serieDataList.length > 0) {\n    sendMsg.serieDataList = serieDataList;\n    node.send(sendMsg);\n    // node.send([sendMsg, null]);\n} \n// else {\n//     node.send([null, sendMsg]);\n// }","outputs":"1","noerr":0,"x":1030,"y":480,"wires":[["11238746.227b29"]]},{"id":"39497486.27c8ac","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"get Info","queryString":"","outputTo":"deviceAndSensorsInfo","x":600,"y":380,"wires":[["23204254.8ffbfe"]]},{"id":"c19903d6.63115","type":"function","z":"4c2e94da.3be41c","name":"get db info","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?;';\nquery +='select * from sensor where macAddr = ?;';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr, msg.payload.macAddr];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":510,"y":480,"wires":[["39497486.27c8ac"]]},{"id":"302ad291.ed994e","type":"mqtt out","z":"4c2e94da.3be41c","name":"send control msg","topic":"","qos":"","retain":"","broker":"3906f8ce.3daa18","x":1850,"y":560,"wires":[]},{"id":"23204254.8ffbfe","type":"function","z":"4c2e94da.3be41c","name":"update database","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet deviceInfo = msg.deviceAndSensorsInfo[0][0];\nlet deviceLastUpdate = new Date(deviceInfo.last_update);\nlet currentTime = msg.receivedTime;\n\nif(currentTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n    updateDbQuery+='UPDATE device SET last_update = ?, status=\"ONLINE\" where macAddr = ? ;';    \n    bindQuery.push(\n        moment(currentTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr);   \n}\n\nlet sensorsInfo = msg.deviceAndSensorsInfo[1];\nlet sensorsData = msg.payload.sensorsData;\nfor(let i=0;i<sensorsInfo.length;i++){\n    let sensorInfo =  sensorsInfo[i];\n    let sensorExist = false;\n    for (let i=0;i<sensorsData.length;i++){\n        if (sensorsData[i].name ==sensorInfo.name){\n            sensorExist = true;\n            break;\n        }\n    }\n    if(sensorExist===true){\n        let sensorLastUpdate = new Date(sensorInfo.last_update);\n        if(currentTime.getTime() - sensorLastUpdate.getTime() >10000){\n            updateDbQuery+=' UPDATE sensor SET last_update = ?, status=\"ONLINE\" where macAddr = ? and name=? ;';    \n            bindQuery.push(\n                moment(currentTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n                msg.payload.macAddr,\n                sensorInfo.name\n            );   \n        }\n    }\n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    \n    return [msg,null];    \n}else{\n    return [null,msg];\n}\n","outputs":"2","noerr":0,"x":730,"y":480,"wires":[["8d7b9d4a.3ec02"],["8a21887b.c87f98"]]},{"id":"8d7b9d4a.3ec02","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"update db","queryString":"","outputTo":"queryResult","x":870,"y":380,"wires":[["8a21887b.c87f98"]]},{"id":"8cd88a49.9b5cb8","type":"inject","z":"4c2e94da.3be41c","name":"set device status","topic":"","payload":"","payloadType":"date","repeat":"20","crontab":"","once":false,"x":90,"y":880,"wires":[[]]},{"id":"bac16a82.43e428","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"get sensors Info","queryString":"","outputTo":"sensorsInfo","x":500,"y":880,"wires":[["111be1c0.f2769e"]]},{"id":"54c624af.92c3fc","type":"function","z":"4c2e94da.3be41c","name":"get sensors info","func":"// authenticate msg format\nlet query ='select * from sensor';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [];\nmsg.query = query;\nmsg.receivedTime = new Date();\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":300,"y":880,"wires":[["bac16a82.43e428"]]},{"id":"111be1c0.f2769e","type":"function","z":"4c2e94da.3be41c","name":"get devcies info","func":"// authenticate msg format\nlet query ='select * from device';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":880,"wires":[["5d6d8c7c.03b264"]]},{"id":"5d6d8c7c.03b264","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"get devices info","queryString":"","outputTo":"devicesInfo","x":900,"y":880,"wires":[["67845e5e.df1f5"]]},{"id":"67845e5e.df1f5","type":"function","z":"4c2e94da.3be41c","name":"update data","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet currentTime = msg.receivedTime;\n\nfor(let i =0;i<msg.devicesInfo.length;i++){\n    let deviceInfo = msg.devicesInfo[i];\n    let deviceLastUpdate = new Date(deviceInfo.last_update);\n    if(currentTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n        updateDbQuery+='UPDATE device SET status = \"OFFLINE\" where macAddr = ? ;';    \n        bindQuery.push(\n        deviceInfo.macAddr);    \n    }    \n}\n\nlet sensorsInfo = msg.sensorsInfo;\nfor(let i=0;i<sensorsInfo.length;i++){\n    let sensorInfo =  sensorsInfo[i];\n    let sensorLastUpdate = new Date(sensorInfo.last_update);\n    if(currentTime.getTime() - sensorLastUpdate.getTime() >10000){\n        updateDbQuery+=' UPDATE sensor SET status = \"OFFLINE\" where macAddr = ? and name=? ;';    \n        bindQuery.push(\n            sensorInfo.macAddr,\n            sensorInfo.name\n        );\n    }\n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    node.send(msg);    \n}","outputs":"1","noerr":0,"x":1090,"y":880,"wires":[["8755df06.f44cb"]]},{"id":"8755df06.f44cb","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"queryResult","x":1270,"y":880,"wires":[[]]},{"id":"de8a8281.5d99a","type":"function","z":"4c2e94da.3be41c","name":"parse payload - routing msg","func":"msg.payload = JSON.parse(msg.payload);\nmsg.receivedTime = new Date();\nlet msgType =  msg.payload.type;\n\nif(msgType=='data'){ // forward msg to process data message flow\n    node.send([msg,null]);\n}else if(msgType=='motion'){ // forward msg to process motion message flow\n    node.send([null,msg]);\n    \n}\n","outputs":"2","noerr":0,"x":280,"y":520,"wires":[["c19903d6.63115"],["5d5e7e6e.0b8d4"]],"outputLabels":["flow process data message","flow process motion message"]},{"id":"5d5e7e6e.0b8d4","type":"function","z":"4c2e94da.3be41c","name":"get db info","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?;';\nquery +='select * from sensor where macAddr = ? and name=?;';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ \n    msg.payload.macAddr, \n    msg.payload.macAddr, \n    msg.payload.name\n    ];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":510,"y":560,"wires":[["e58ea327.655db"]]},{"id":"e58ea327.655db","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"get Info","queryString":"","outputTo":"deviceAndSensorsInfo","x":620,"y":660,"wires":[["d1cbdd8c.49b39"]]},{"id":"d1cbdd8c.49b39","type":"function","z":"4c2e94da.3be41c","name":"update database","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet deviceInfo = msg.deviceAndSensorsInfo[0][0];\nlet motionSensorInfo = msg.deviceAndSensorsInfo[1][0];\nlet deviceLastUpdate = new Date(deviceInfo.last_update);\nlet motionSensorLastUpdate =new Date(motionSensorInfo.last_update);\nlet receivedTime = msg.receivedTime;\n\nif(receivedTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n    updateDbQuery+='UPDATE device SET last_update = ?, status=\"ONLINE\" where macAddr = ? ;';    \n    bindQuery.push(\n        moment(receivedTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr);   \n}\n\nif(receivedTime.getTime() - motionSensorLastUpdate.getTime() > 10000){ //update motion sensor last update\n    updateDbQuery+='UPDATE sensor SET last_update = ?, status=\"ONLINE\" where macAddr = ? and name = ? ;';    \n    bindQuery.push(\n        moment(receivedTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr,\n        msg.payload.name\n    );   \n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    \n    return [null,msg];    \n}else{\n    return [msg,null];\n}\n","outputs":"2","noerr":0,"x":730,"y":560,"wires":[["ab05bc59.20e07"],["cfe835e9.00e8c8"]]},{"id":"cfe835e9.00e8c8","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"update db","queryString":"","outputTo":"queryResult","x":930,"y":640,"wires":[["ab05bc59.20e07"]]},{"id":"ab05bc59.20e07","type":"influxdb-query","z":"4c2e94da.3be41c","name":"query last light data","influxdbServer":"cea6a36a.285fc","queryString":"SELECT last(value) as value, time FROM data \nWHERE macAddr = '{{msg.payload.macAddr}}' and unit= 'Lux'","outputTo":"lastLightData","x":1080,"y":560,"wires":[["1abceda8.03d082"]]},{"id":"3706e516.30353a","type":"function","z":"4c2e94da.3be41c","name":"send action to device","func":"let currentTime = (new Date(msg.receivedTime)).getTime();\nlet lastLightData = msg.lastLightData[0];\nlet lastTempData = msg.lastTempData[0];\nif (currentTime - (new Date(lastLightData.time)).getTime() <= 30000 &&\n    currentTime - (new Date(lastTempData.time)).getTime() <= 30000 &&\n    lastLightData.value > 100 && lastTempData.value > 30) {\n        let deviceTopic = 'bkcloud/'+msg.payload.macAddr+'/action';\n        let sendActionMsg = {\n            topic:deviceTopic,\n            payload:{\n                type: \"servoAction\",\n                action: \"ON\"    \n            }\n        };\n        node.send(sendActionMsg);\n}","outputs":1,"noerr":0,"x":1620,"y":560,"wires":[["302ad291.ed994e"]]},{"id":"1abceda8.03d082","type":"influxdb-query","z":"4c2e94da.3be41c","name":"query last temperature data","influxdbServer":"cea6a36a.285fc","queryString":"SELECT last(value) as value, time FROM data \nWHERE macAddr = '{{msg.payload.macAddr}}' and unit= 'C'","outputTo":"lastTempData","x":1360,"y":560,"wires":[["3706e516.30353a"]]},{"id":"bd4b5fbd.62197","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"get devices info","queryString":"select * from device","outputTo":"devicesInfo","x":500,"y":740,"wires":[["dc0e4879.2103c8"]]},{"id":"75e3e462.93862c","type":"inject","z":"4c2e94da.3be41c","name":"interval check average temperature","topic":"","payload":"","payloadType":"date","repeat":"20","crontab":"","once":false,"x":190,"y":760,"wires":[[]]},{"id":"136d8b75.e84d45","type":"influxdb-query","z":"4c2e94da.3be41c","name":"query temperature history","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"tempData","x":920,"y":720,"wires":[["5f5cc82c.b161f8"]]},{"id":"dc0e4879.2103c8","type":"function","z":"4c2e94da.3be41c","name":"","func":"msg.receivedTime = msg.payload;\nlet limitTime = (msg.receivedTime -60000)*Math.pow(10,6);\nmsg.payload = {\n    // query:'SELECT * from data '+\n    //     'WHERE unit=\"Lux\" and time >='+limitTime\n            query:\"SELECT * from data WHERE unit='C'\" +\n            \"and time >=\"+limitTime\n}\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":780,"wires":[["136d8b75.e84d45"]]},{"id":"5f5cc82c.b161f8","type":"function","z":"4c2e94da.3be41c","name":"set light action","func":"for (let i = 0; i < msg.devicesInfo.length; i++) {\n    let checkDevice = msg.devicesInfo[i];\n    let totalTemp = 0;\n    let totalCount = 0;\n    for (var j = 0; j < msg.tempData.length; j++) {\n        var checkTempPoint = msg.tempData[j];\n        if (checkTempPoint.macAddr == checkDevice.macAddr) {\n            totalCount += 1;\n            totalTemp += checkTempPoint.value;\n        }\n    }\n    // check if avg temp is bigger than 25\n    if (totalCount > 0 && totalTemp / totalCount > 25) {\n        let sendLedOnActionMsg = {\n            topic: 'bkcloud/' + checkDevice.macAddr + '/action',\n            payload: {\n                'type': 'ledAction',\n                'action': 'ON'\n            }\n        };\n        let sendLedOffActionMsg = {\n            topic: 'bkcloud/' + checkDevice.macAddr + '/action',\n            payload: {\n                'type': 'ledAction',\n                'action': 'OFF'\n            }\n        };\n        node.send([sendLedOnActionMsg, null]);\n        setTimeout(function () {\n            node.send(sendLedOffActionMsg);\n        }, 5000);\n    }\n}","outputs":"2","noerr":0,"x":1180,"y":720,"wires":[["211ecfd.a37cc3","c744a6da.40ec58"],["3e76dca8.31f5a4","c744a6da.40ec58"]]},{"id":"211ecfd.a37cc3","type":"mqtt out","z":"4c2e94da.3be41c","name":"send turn on light action","topic":"","qos":"","retain":"","broker":"f3ce6127.d19cd","x":1410,"y":640,"wires":[]},{"id":"3e76dca8.31f5a4","type":"mqtt out","z":"4c2e94da.3be41c","name":"send turn off light action","topic":"","qos":"","retain":"","broker":"f3ce6127.d19cd","x":1410,"y":740,"wires":[]},{"id":"c744a6da.40ec58","type":"debug","z":"4c2e94da.3be41c","name":"","active":true,"console":"false","complete":"true","x":1381,"y":692,"wires":[]},{"id":"93614512.b3faa8","type":"mysql-query","z":"4c2e94da.3be41c","mydb":"14730d30.1dc053","name":"check device","queryString":"","outputTo":"deviceQueryResult","x":444.75,"y":160.75,"wires":[["8cdaf5c7.55b748"]]},{"id":"74f3c55.232af3c","type":"mqtt in","z":"4b7b79b4.35d5c8","name":"","topic":"bkcloud/data","qos":"2","broker":"d8906401.ab26d8","x":80,"y":247,"wires":[[]]},{"id":"916b74b8.ccf4c8","type":"switch","z":"4b7b79b4.35d5c8","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"data","vt":"str"},{"t":"eq","v":"motion","vt":"str"}],"checkall":"true","outputs":2,"x":346,"y":238,"wires":[["fb22981f.5311a8"],["c233e85a.86a898"]]},{"id":"c233e85a.86a898","type":"function","z":"4b7b79b4.35d5c8","name":"type is motion","func":"let threshold = 10;\n\n// msg.payload = JSON.parse(msg.payload);\nlet macAddr = msg.payload.macAddr;\n\nlet servoMessage = function (status) {\n    return {\n        type: \"servoAction\",\n        action: status\n    }\n}\n// check motionCount-MAC\nlet motionCount = context.get('motionCount-' + macAddr);\nif (typeof(motionCount) === \"undefined\") {\n    motionCount = 1;\n}\nmsg.motionCount = motionCount;\n\nif (motionCount === 0) {\n    //    turn off servo\n    msg.payload = servoMessage('ON');\n    context.set('motionCount-' + macAddr, 1);\n    msg.topic = \"bkcloud/\" + macAddr + \"/action\";\n    return msg;\n} else {\n    let newestData = flow.get('newestData-' + macAddr);\n    context.set('motionCount-' + macAddr, 0);\n    if(newestData){\n        for(let i = 0;i<newestData.sensorsData.length;i++){\n            let sensor = newestData.sensorsData[i];\n            if(sensor.unit === \"C\"){\n                if(sensor.value > threshold){\n                    msg.payload = servoMessage('ON');\n                    msg.topic = \"bkcloud/\" + macAddr + \"/action\";\n                    return msg;\n                }\n            }\n        }\n    }\n    msg.payload = servoMessage('OFF');\n    msg.topic = \"bkcloud/\" + macAddr + \"/action\";\n    return msg;\n}\n","outputs":1,"noerr":0,"x":550,"y":288,"wires":[[]]},{"id":"7a4415f3.3a40ac","type":"debug","z":"4b7b79b4.35d5c8","name":"","active":true,"console":"false","complete":"false","x":527,"y":502,"wires":[]},{"id":"4b75e8cd.3198e8","type":"mqtt in","z":"4b7b79b4.35d5c8","name":"","topic":"test","qos":"2","broker":"d8906401.ab26d8","x":127,"y":502,"wires":[["6dc70c84.9938e4"]]},{"id":"6dc70c84.9938e4","type":"json","z":"4b7b79b4.35d5c8","name":"","pretty":false,"x":327,"y":502,"wires":[["7a4415f3.3a40ac"]]},{"id":"e1b8a446.9e6788","type":"mqtt in","z":"4b7b79b4.35d5c8","name":"","topic":"servo","qos":"2","broker":"d8906401.ab26d8","x":127,"y":602,"wires":[["a551edcb.656e9"]]},{"id":"a551edcb.656e9","type":"json","z":"4b7b79b4.35d5c8","name":"","pretty":false,"x":327,"y":602,"wires":[["3939db25.210824"]]},{"id":"3939db25.210824","type":"debug","z":"4b7b79b4.35d5c8","name":"","active":true,"console":"false","complete":"payload","x":527,"y":602,"wires":[]},{"id":"fb22981f.5311a8","type":"function","z":"4b7b79b4.35d5c8","name":"query sensors info","func":"let macAddr = msg.payload.macAddr;\nmsg.macAddr = macAddr;\nmsg.query = \"select * from sensor where macAddr='\" + macAddr + \"';\";\n\nreturn msg;","outputs":1,"noerr":0,"x":489,"y":161,"wires":[["c1517312.f06b5"]]},{"id":"de13ea5a.11b998","type":"debug","z":"4b7b79b4.35d5c8","name":"","active":true,"console":"false","complete":"true","x":960,"y":245,"wires":[]},{"id":"c1517312.f06b5","type":"mysql-query","z":"4b7b79b4.35d5c8","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"sensorsRegistered","x":594,"y":84,"wires":[["99480d43.66d8d"]]},{"id":"99480d43.66d8d","type":"function","z":"4b7b79b4.35d5c8","name":"check data format and sensors status","func":"if(msg.sensorsRegistered.length) {\n\n    let dataSensorsToSave = [];\n    let statusSensorsToSave = [];\n\n    let updateStatusOnline = function (sensorExisted, statusSensorsToSave) {\n        if (sensorExisted.status === \"OFFLINE\") {\n            sensorExisted.status = \"ONLINE\";\n            statusSensorsToSave.push(sensorExisted);\n        }\n    }\n\n    let updateStatusOffline = function (sensorExisted, statusSensorsToSave) {\n        if (sensorExisted.status === \"ONLINE\") {\n            sensorExisted.status = \"OFFLINE\";\n            statusSensorsToSave.push(sensorExisted);\n        }\n    }\n\n//add sensors existed\n    for (let i = 0; i < msg.payload.sensorsData.length; i++) {\n        let sensor = msg.payload.sensorsData[i];\n        for (let j = 0; j < msg.sensorsRegistered.length; j++) {\n            let sensorExisted = msg.sensorsRegistered[j];\n            if (sensor.name === sensorExisted.name) {\n                switch (sensor.unit.toLowerCase()) {\n                    case 'c':\n                        if (sensor.value > 1 && sensor.value < 100) {\n                            dataSensorsToSave.push(sensor);\n                            // status = \"ONLINE\";\n                            updateStatusOnline(sensorExisted, statusSensorsToSave);\n                        } else {\n                            // status = \"OFFLINE\";\n                            updateStatusOffline(sensorExisted, statusSensorsToSave)\n                        }\n                        break;\n                    case '%':\n                        if (sensor.value > 0 && sensor.value < 100) {\n                            dataSensorsToSave.push(sensor);\n                            updateStatusOnline(sensorExisted, statusSensorsToSave);\n                        } else {\n                            updateStatusOffline(sensorExisted, statusSensorsToSave);\n                        }\n                        break;\n                    case 'lux':\n                        if (sensor.value > 1 && sensor.value < 65535) {\n                            dataSensorsToSave.push(sensor);\n                            updateStatusOnline(sensorExisted, statusSensorsToSave);\n                        } else {\n                            updateStatusOffline(sensorExisted, statusSensorsToSave);\n                        }\n                        break;\n                }\n                break;\n            }\n        }\n    }\n\n    msg.dataSensorsToSave = dataSensorsToSave;\n    msg.statusSensorsToSave = statusSensorsToSave;\n    let msgSaveData = null;\n    let msgUpdateStatus = null;\n    if (dataSensorsToSave.length) {\n        msgSaveData = {\n            macAddr: msg.macAddr,\n            dataSensorsToSave: dataSensorsToSave\n        }\n    }\n    if (statusSensorsToSave.length) {\n        msgUpdateStatus = {\n            macAddr: msg.macAddr,\n            statusSensorsToSave: statusSensorsToSave\n        }\n    }\n\n    let msg2 = {macAddr: msg.macAddr};\nreturn msg;\n\n} else {\n    return null;\n}","outputs":"1","noerr":0,"x":798,"y":157,"wires":[["de13ea5a.11b998"]]},{"id":"35faea5f.4da756","type":"function","z":"4b7b79b4.35d5c8","name":"save data","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1062,"y":93,"wires":[[]]},{"id":"5f647830.a35c58","type":"function","z":"4c2e94da.3be41c","name":"update status","func":"msg.payload = JSON.parse(msg.payload);\nmsg.payload.time = new Date(msg.payload.time * Math.pow(10,3));\nreturn msg;","outputs":1,"noerr":0,"x":241,"y":386,"wires":[[]]},{"id":"d7b05681.3f5c28","type":"debug","z":"4c2e94da.3be41c","name":"","active":true,"console":"false","complete":"false","x":417,"y":339,"wires":[]},{"id":"1e1b512a.cec91f","type":"function","z":"4b7b79b4.35d5c8","name":"JSON and add currnet time","func":"msg.payload = JSON.parse(msg.payload);\nmsg.timeReceivedData = new Date();\nreturn msg;","outputs":1,"noerr":0,"x":201,"y":165,"wires":[["916b74b8.ccf4c8"]]},{"id":"41f5b379.b41ccc","type":"influxdb-write-data","z":"a4a988b9.2e59b8","name":"","influxdbServer":"cea6a36a.285fc","dataInput":"writeDataInput","measurement":"","outputTo":"writeDataResult","x":1108,"y":321,"wires":[[]]},{"id":"e468754e.0c6558","type":"http in","z":"dd3c442e.36ee38","name":"","url":"/device/sensors","method":"get","upload":false,"swaggerDoc":"","x":131,"y":1451,"wires":[["76d949e.5cd21b8"]]},{"id":"76d949e.5cd21b8","type":"function","z":"dd3c442e.36ee38","name":"get device's sensors","func":"msg.macAddr = msg.payload.macAddr;\nmsg.query = \"select * from sensor where macAddr='\" + msg.macAddr + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":374,"y":1452,"wires":[["482d45b2.ab09ec"]]},{"id":"70860951.b9eaa8","type":"http response","z":"dd3c442e.36ee38","name":"","statusCode":"","headers":{},"x":797,"y":1459,"wires":[]},{"id":"482d45b2.ab09ec","type":"mysql-query","z":"dd3c442e.36ee38","mydb":"14730d30.1dc053","name":"","queryString":"","outputTo":"payload","x":597,"y":1439,"wires":[["70860951.b9eaa8"]]},{"id":"98e5c1db.edd95","type":"debug","z":"dd3c442e.36ee38","name":"","active":true,"console":"false","complete":"true","x":793,"y":1640,"wires":[]},{"id":"3cf1f4da.15844c","type":"inject","z":"dd3c442e.36ee38","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":1737,"wires":[[]]},{"id":"19810747.d89ca9","type":"http in","z":"dd3c442e.36ee38","name":"","url":"sensor/chart/initData","method":"get","upload":false,"swaggerDoc":"","x":162,"y":1543,"wires":[["378fbbd4.58ce64"]]},{"id":"a6e8f754.a24588","type":"influxdb-query","z":"dd3c442e.36ee38","name":"","influxdbServer":"cea6a36a.285fc","queryString":"","outputTo":"payload","x":685,"y":1560,"wires":[["70860951.b9eaa8","98e5c1db.edd95"]]},{"id":"378fbbd4.58ce64","type":"function","z":"dd3c442e.36ee38","name":"add query latest data","func":"msg.macAddr = msg.payload.macAddr;\nmsg.sensorName = msg.payload.sensorName;\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.payload.query = \"select * from data where \" +\n    \"\\\"name\\\" = '\" + msg.sensorName + \"' and \" +\n    \"\\\"macAddr\\\" = '\" + msg.macAddr + \"' and \" +\n    \"time >= \"+ startTime + \" and \" +\n    \"time <= \" + endTime;\nmsg.query = msg.payload.query;\nreturn msg;","outputs":1,"noerr":0,"x":426,"y":1540,"wires":[["a6e8f754.a24588"]]}]